{"version":3,"sources":["App.tsx","pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","pages/PeoplePage.tsx","pages/ErrorPage.tsx","Root.tsx","index.tsx"],"names":["App","className","role","to","isActive","cn","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PeoplePage","useState","people","setPeople","peopleLoading","setPeopleLoading","peopleLoadingError","setPeopleLoadingError","personId","useParams","renderTable","length","renderNoPeopleError","useEffect","catch","finally","map","personMother","personFather","motherName","mother","find","m","fatherName","father","f","born","died","ErrorPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.63b0a412.chunk.js","sourcesContent":["import { Outlet, NavLink } from 'react-router-dom';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => cn('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => cn('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink:React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={person.sex === 'f' ? 'has-text-danger' : ''}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from '../components/Loader';\nimport { PersonLink } from '../components/PersonLink';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [peopleLoading, setPeopleLoading] = useState(false);\n  const [peopleLoadingError, setPeopleLoadingError] = useState(false);\n\n  const { personId } = useParams();\n  const renderTable = !peopleLoading && people && people.length > 0;\n  const renderNoPeopleError = !peopleLoading && people && people.length === 0;\n\n  useEffect(() => {\n    setPeopleLoadingError(false);\n    setPeopleLoading(true);\n\n    getPeople()\n      .then((response) => {\n        setPeople(response as Person[]);\n      })\n      .catch(() => setPeopleLoadingError(true))\n      .finally(() => setPeopleLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {peopleLoading && <Loader />}\n\n          {peopleLoadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {renderTable && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => {\n                  let personMother: React.ReactNode = '-';\n                  let personFather: React.ReactNode = '-';\n\n                  if (person.motherName) {\n                    const mother = people\n                      .find(m => m.name === person.motherName);\n\n                    personMother = typeof mother === 'object'\n                      ? <PersonLink person={mother} />\n                      : person.motherName;\n                  }\n\n                  if (person.fatherName) {\n                    const father = people\n                      .find(f => f.name === person.fatherName);\n\n                    personFather = typeof father === 'object'\n                      ? <PersonLink person={father} />\n                      : person.fatherName;\n                  }\n\n                  return (\n                    <tr\n                      data-cy=\"person\"\n                      key={person.slug}\n                      className={cn(\n                        { 'has-background-warning': person.slug === personId },\n                      )}\n                    >\n                      <td>\n                        <PersonLink person={person} />\n                      </td>\n\n                      <td>{person.sex}</td>\n                      <td>{person.born}</td>\n                      <td>{person.died}</td>\n\n                      <td>\n                        {personMother}\n                      </td>\n\n                      <td>\n                        {personFather}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          )}\n\n          {renderNoPeopleError && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const ErrorPage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { ErrorPage } from './pages/ErrorPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"/people\" element={<PeoplePage />}>\n          <Route path=\":personId\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<ErrorPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\nimport { Root } from './Root';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}